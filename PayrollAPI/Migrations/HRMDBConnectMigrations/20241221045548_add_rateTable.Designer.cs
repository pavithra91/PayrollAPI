// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayrollAPI.Data;

#nullable disable

namespace PayrollAPI.Migrations.HRMDBConnectMigrations
{
    [DbContext(typeof(HRMDBConnect))]
    [Migration("20241221045548_add_rateTable")]
    partial class add_rateTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PayrollAPI.Models.HRM.AdvancePayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int?>("employeeid")
                        .HasColumnType("int");

                    b.Property<bool>("isFullAmount")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("period")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("employeeid");

                    b.ToTable("AdvancePayment");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmpApprovalWorkflow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("approvalLevelsid")
                        .HasColumnType("int");

                    b.Property<int?>("approverIdid")
                        .HasColumnType("int");

                    b.Property<int>("empApprovalIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("approvalLevelsid");

                    b.HasIndex("approverIdid");

                    b.HasIndex("empApprovalIdid");

                    b.ToTable("EmpApprovalWorkflow");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmpApprovals", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int?>("employeeid")
                        .HasColumnType("int");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("level")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("employeeid");

                    b.ToTable("EmpApprovals");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("companyCode")
                        .HasColumnType("int");

                    b.Property<string>("costCenter")
                        .HasColumnType("varchar(6)");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int?>("empGradeid")
                        .HasColumnType("int");

                    b.Property<string>("empName")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("epf")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("role")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<string>("userID")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("workflowLevelid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("empGradeid");

                    b.HasIndex("workflowLevelid");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmployeeGrade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("description")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("gradeCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("EmployeeGrade");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveApproval", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("approver_idid")
                        .HasColumnType("int");

                    b.Property<string>("comments")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("epf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan?>("lastUpdateTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("levelid")
                        .HasColumnType("int");

                    b.Property<int>("requestIdleaveRequestId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("tempApproval")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("approver_idid");

                    b.HasIndex("levelid");

                    b.HasIndex("requestIdleaveRequestId");

                    b.ToTable("LeaveApproval");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveBalance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("allocatedLeaves")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal>("carryForwardLeaves")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int>("epf")
                        .HasColumnType("int");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("leaveTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("remainingLeaves")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal>("usedLeaves")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("leaveTypeId");

                    b.ToTable("LeaveBalance");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveRequest", b =>
                {
                    b.Property<int>("leaveRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("actingDelegate")
                        .HasColumnType("longtext");

                    b.Property<string>("actingDelegateApprovalStatus")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("actingDelegateApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("actingDelegateApprovedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("actionedBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int>("currentLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("epf")
                        .HasColumnType("int");

                    b.Property<string>("finalStatus")
                        .HasColumnType("longtext");

                    b.Property<int?>("halfDayType")
                        .HasColumnType("int");

                    b.Property<bool>("isHalfDay")
                        .HasColumnType("boolean");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("leaveTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("lieuLeaveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("noOfDays")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<string>("reason")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("requestStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("leaveRequestId");

                    b.HasIndex("leaveTypeId");

                    b.ToTable("LeaveRequest");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveType", b =>
                {
                    b.Property<int>("leaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("carryForwardAllowed")
                        .HasColumnType("boolean");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("leaveTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("maxDays")
                        .HasColumnType("decimal(4, 1)");

                    b.HasKey("leaveTypeId");

                    b.ToTable("LeaveType");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.Notification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("epf")
                        .HasColumnType("int");

                    b.Property<bool>("markAsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("reference")
                        .HasColumnType("varchar(6)");

                    b.Property<string>("status")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("target")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.Supervisor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int?>("epfid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("expireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isManager")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("isTempSupervisor")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("epfid");

                    b.ToTable("Supervisor");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.WorkflowTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("levelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("WorkflowTypes");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.Bungalow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("bungalowName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("companyCode")
                        .HasColumnType("int");

                    b.Property<string>("contactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("description")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("isCloded")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("mainImg")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("maxBookingPeriod")
                        .HasColumnType("int");

                    b.Property<int>("noOfRooms")
                        .HasColumnType("int");

                    b.Property<decimal>("perDayCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("reopenDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Bungalow");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.BungalowRates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("bungalowid")
                        .HasColumnType("int");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("perDayCost")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("id");

                    b.HasIndex("bungalowid");

                    b.HasIndex("categoryid");

                    b.ToTable("BungalowRates");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.Bungalow_Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("bookingStatus")
                        .HasColumnType("int");

                    b.Property<int>("bookingType")
                        .HasColumnType("int");

                    b.Property<int>("bungalowid")
                        .HasColumnType("int");

                    b.Property<DateTime>("checkInDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("checkOutDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("companyCode")
                        .HasColumnType("int");

                    b.Property<string>("contactNumber_1")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("contactNumber_2")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int>("employeeid")
                        .HasColumnType("int");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("noOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("noOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("reservationCategoryid")
                        .HasColumnType("int");

                    b.Property<int>("totalPax")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("bungalowid");

                    b.HasIndex("employeeid");

                    b.HasIndex("reservationCategoryid");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.RaffleDraw", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<int>("rank")
                        .HasColumnType("int");

                    b.Property<int>("reservationID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("reservationID")
                        .IsUnique();

                    b.ToTable("RaffleDraw");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.ReservationCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("categoryName")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("ReservationCategory");
                });

            modelBuilder.Entity("PayrollAPI.Models.Services.JobSchedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("createdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURDATE())");

                    b.Property<DateTime>("createdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("(CURTIME())");

                    b.Property<string>("cronExpression")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("groupName")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("jobName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("lastUpdateBy")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("lastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("lastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("JobSchedule");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.AdvancePayment", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.Employee", "employee")
                        .WithMany("advancePayments")
                        .HasForeignKey("employeeid");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmpApprovalWorkflow", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.WorkflowTypes", "approvalLevels")
                        .WithMany()
                        .HasForeignKey("approvalLevelsid");

                    b.HasOne("PayrollAPI.Models.HRM.Supervisor", "approverId")
                        .WithMany()
                        .HasForeignKey("approverIdid");

                    b.HasOne("PayrollAPI.Models.HRM.EmpApprovals", "empApprovalId")
                        .WithMany("approvalWorkflowsId")
                        .HasForeignKey("empApprovalIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("approvalLevels");

                    b.Navigation("approverId");

                    b.Navigation("empApprovalId");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmpApprovals", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.Employee", "employee")
                        .WithMany("empApprovals")
                        .HasForeignKey("employeeid");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.Employee", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.EmployeeGrade", "empGrade")
                        .WithMany("employees")
                        .HasForeignKey("empGradeid");

                    b.HasOne("PayrollAPI.Models.HRM.WorkflowTypes", "workflowLevel")
                        .WithMany("employees")
                        .HasForeignKey("workflowLevelid");

                    b.Navigation("empGrade");

                    b.Navigation("workflowLevel");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveApproval", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.Supervisor", "approver_id")
                        .WithMany()
                        .HasForeignKey("approver_idid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollAPI.Models.HRM.WorkflowTypes", "level")
                        .WithMany()
                        .HasForeignKey("levelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollAPI.Models.HRM.LeaveRequest", "requestId")
                        .WithMany()
                        .HasForeignKey("requestIdleaveRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("approver_id");

                    b.Navigation("level");

                    b.Navigation("requestId");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveBalance", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("leaveType");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveRequest", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.LeaveType", "leaveType")
                        .WithMany("leaveRequests")
                        .HasForeignKey("leaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("leaveType");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.Supervisor", b =>
                {
                    b.HasOne("PayrollAPI.Models.HRM.Employee", "epf")
                        .WithMany("supervisors")
                        .HasForeignKey("epfid");

                    b.Navigation("epf");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.BungalowRates", b =>
                {
                    b.HasOne("PayrollAPI.Models.Reservation.Bungalow", "bungalow")
                        .WithMany("rates")
                        .HasForeignKey("bungalowid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollAPI.Models.Reservation.ReservationCategory", "category")
                        .WithMany("bungalowRates")
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bungalow");

                    b.Navigation("category");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.Bungalow_Reservation", b =>
                {
                    b.HasOne("PayrollAPI.Models.Reservation.Bungalow", "bungalow")
                        .WithMany("reservations")
                        .HasForeignKey("bungalowid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollAPI.Models.HRM.Employee", "employee")
                        .WithMany("reservations")
                        .HasForeignKey("employeeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollAPI.Models.Reservation.ReservationCategory", "reservationCategory")
                        .WithMany("bungalow_Reservations")
                        .HasForeignKey("reservationCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bungalow");

                    b.Navigation("employee");

                    b.Navigation("reservationCategory");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.RaffleDraw", b =>
                {
                    b.HasOne("PayrollAPI.Models.Reservation.Bungalow_Reservation", "bungalow_Reservation")
                        .WithOne("raffleDraw")
                        .HasForeignKey("PayrollAPI.Models.Reservation.RaffleDraw", "reservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bungalow_Reservation");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmpApprovals", b =>
                {
                    b.Navigation("approvalWorkflowsId");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.Employee", b =>
                {
                    b.Navigation("advancePayments");

                    b.Navigation("empApprovals");

                    b.Navigation("reservations");

                    b.Navigation("supervisors");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.EmployeeGrade", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.LeaveType", b =>
                {
                    b.Navigation("leaveRequests");
                });

            modelBuilder.Entity("PayrollAPI.Models.HRM.WorkflowTypes", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.Bungalow", b =>
                {
                    b.Navigation("rates");

                    b.Navigation("reservations");
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.Bungalow_Reservation", b =>
                {
                    b.Navigation("raffleDraw")
                        .IsRequired();
                });

            modelBuilder.Entity("PayrollAPI.Models.Reservation.ReservationCategory", b =>
                {
                    b.Navigation("bungalowRates");

                    b.Navigation("bungalow_Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
